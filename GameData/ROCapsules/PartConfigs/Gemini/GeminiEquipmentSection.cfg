PART
{

	// --- general parameters ---
	name = ROC-GeminiEquipmentSection
	module = Part
	author = Frizzank,capkirk

	// --- asset parameters ---
	MODEL
	{
		model = ROCapsules/Assets/FASA/Gemini_UtilityPack
		scale = 1.219, 1.028, 1.219
	}

	RSSROConfig = True
	rescaleFactor = 1.0
	scale = 1.028

	// --- node definitions ---
	node_stack_top = 0.0, 0.622, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -0.6925, 0.0, 0.0, -1.0, 0.0, 3

	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple

	// --- editor parameters ---
	TechRequired = fuelSystems
	entryCost = 1200
	cost = 850
	category = -1
	subcategory = 0
	title = Gemini Adapter Equipment Section
	manufacturer = McDonnell Aircraft
	description = The Gemini Adapter Equipment Section.	 It contains O2 and H2 for fuel cell consumption and life support.	It also contains fuel for manoeuvring and attitude control thrusters.  This is the configuration as found on Gemini 10+. RCS O/F Ratio 1.3:1.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 0.367
	dragModelType = default
	maximum_drag = 0.22
	minimum_drag = 0.22
	angularDrag = 2.3
	crashTolerance = 24
	breakingForce = 80
	breakingTorque = 80
	maxTemp = 2400
	fuelCrossFeed = True

	stageOffset = 1
	childStageOffset = 0

	//	============================================================================
	//	Modules and Resources
	//	============================================================================
	MODULE
	{
		name = ModuleDecouple
		explosiveNodeID = top
		isOmniDecoupler = false
		ejectionForce = 10
		staged = False
	}

	MODULE
	{
		name = ModuleRCSFX
		runningEffectName = running
		thrusterTransformName = RCSthruster
		resourceFlowMode = STACK_PRIORITY_SEARCH
		thrusterPower = 0.4448222
		fxOffset = 0, 0.1, 0.0
		PROPELLANT
		{
			name = MMH
			ratio = 0.554
		}
		PROPELLANT
		{
			name = NTO
			ratio = 0.446
		}
		atmosphereCurve
		{
			key = 0 273
			key = 1 100
		}

	}
	
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = True
	}
	
	MODULE
	{
		name = ModuleFuelTanks
		volume = 2340
		type = ServiceModule
		basemass = -1
		TANK
		{
			name = LqdHydrogen
			amount = 413
			maxAmount = 413
		}
		TANK
		{
			name = LqdOxygen
			amount = 317
			maxAmount = 317
		}
		TANK
		{
			name = MMH
			amount = 239.4665
			maxAmount = 239.4665
		}
		TANK
		{
			name = NTO
			amount = 192.7835
			maxAmount = 192.7835
		}
		TANK
		{
			name = Water
			amount = 101
			maxAmount = 101
		}
		TANK
		{
			name = WasteWater
			amount = 0
			maxAmount = 315
		}
		TANK
		{
			name = Oxygen
			amount = 0
			maxAmount = 10
		}
		TANK
		{
			name = ElectricCharge
			amount = 552096
			maxAmount = 762048
		}
	}
	
//	============================================================================
//	Animations and Textures
//	============================================================================
	
	EFFECTS
	{
		running
		{
			AUDIO_MULTI
			{
				channel = Ship
				transformName = RCSthruster
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = RCSthruster
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}		
	}

	//Reflection shader plugin
	MODULE
	{
		name = ReflectiveShaderModule

		// Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
		CubeMapSize = 8

		// How deep the reflection will be ("how far the reflection camera will view")
		FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

		// Set to false to render all 6 faces of the CubeMap at once (six times slower~)
		OneFacePerFrame = true

		// The shader to find. The reflective shaders are:
		// Reflective/Diffuse
		// Reflective/VertexLit
		// Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
		ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

		// The height of the parallax map. Values are accepted between 0.005 and 0.08.
		ParallaxHeight = 0.01

		// How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
		ReflectionStrength = 0.4
		//ReflectionColor = 0, 0, 0, 0

		// Use this variable to specify which meshes to apply the shader to.
		// Not using this variable will default to the first found mesh.
		// Use the actual mesh name for the value. Or you could use:
		// all - to replace the shader on all meshes in the model.
		MeshesToChange = all

		// How shiny the specularity will be (if specular).
		// This value will be automatically set if it already exists on the previous shader and is not defined here.
		Shininess = 1.0
		updateRate = 45

		// These variables should be used together only.
		// These values will be automatically set if they already exist on the previous shader and are not defined here
		SpecColorR = 0.8
		SpecColorG = 0.8
		SpecColorB = 0.8
		SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
	}	
}
//	================================================================================
//	TAC Life Support Compatibility
//	================================================================================
@PART[ROC-GeminiEquipmentSection]:FOR[ROCapsules]:NEEDS[TacLifeSupport]
{
	MODULE
	{
		name = TacGenericConverter
		%converterName = Fuel Cell
		%StartActionName = Start Fuel Cell
		%StopActionName = Stop Fuel Cell
		%conversionRate = 1.0
		//inputResources = LqdHydrogen, 0.000296379, LqdOxygen, 0.000210317
		//outputResources = WasteWater, 0.00025967179, true, ElectricCharge, 2.2, true
		INPUT_RESOURCE
		{
			%ResourceName = LqdHydrogen
			%Ratio = 0.000296379
		}
		INPUT_RESOURCE
		{
			%ResourceName = LqdOxygen
			%Ratio = 0.000210317
		}		
		OUTPUT_RESOURCE
		{
			%ResourceName = WasteWater
			%Ratio = 0.00025967179
			%DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			%ResourceName = ElectricCharge
			%Ratio = 2.2
			%DumpExcess = false // if the batteries are full, we would want the full cell to stop running, right?
		}
	}
	MODULE
	{
		name = TacGenericConverter
		%converterName = LOX-O2
		%StartActionName = Start Oxygen Generator
		%StopActionName = Stop Oxygen Generator
		%conversionRate = 2.0
		//inputResources = LqdOxygen, 0.0000085058788, ElectricCharge, 0.025
		//outputResources = Oxygen, 0.006883126, false
		INPUT_RESOURCE
		{
			%ResourceName = LqdOxygen
			%Ratio = 0.0000085058788
		}
		INPUT_RESOURCE
		{
			%ResourceName = ElectricCharge
			%Ratio = 0.025
		}
		OUTPUT_RESOURCE
		{
			%ResourceName = Oxygen
			%Ratio = 0.006883126
			%DumpExcess = false
		}
	}
}
//	================================================================================
//	Final Pass to Make Sure TAC does not add extra resources
//	================================================================================

@PART[ROC-GeminiEquipmentSection]:FOR[zzzRealismOverhaul]
{
	!RESOURCE:HAS[~name[Ablator],~name[CharredAblator]],*{}
}
//	================================================================================
//	Final Pass to Make Sure crossfeed is correct
//	================================================================================

@PART[ROC-GeminiEquipmentSection]:AFTER[zzzRealismOverhaul]
{
	@MODULE[ModuleToggleCrossfeed]
	{
		@crossfeedStatus = True
	}
}